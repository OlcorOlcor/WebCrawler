@model WebCrawler.Models.WebsiteRecord
@{
    ViewData["Title"] = "Home Page";
    ViewData["CurrentGrafIndex"] = 0;
} 
  
<button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#WebRecordForm" aria-expanded="false" aria-controls="WebRecordForm">
    Add Website
</button>
<div class="collapse" id="WebRecordForm">
    <div class="card card-body" style="margin-top: 30px">
        <h3>Use this form to add new website records.</h3>
        <form asp-controller="Home" asp-action="AddRecord" method="post">
            <div class="form-group">
                <label asp-for="Url">Page URL:</label>
                <input asp-for="Url" class="form-control" placeholder="https://example.com" id="url" name="Url">
            </div>
            <div class="form-group">
                <label asp-for="Regex">Boundary Regular Expresion:</label>
                <input id="regex" class="form-control" asp-for="Regex">
            </div>
            <label for="time">Periodicity:</label>
            <div id="time" class="form-group row">
                <div class="col-sm">
                    <small><label for="days">Days</label></small>
                    <input class="form-control" type="number" min="0" max="1000" id="days" asp-for="Days" value="">
                </div>
                <div class="col-sm">
                    <small><label for="hours">Hours</label></small>
                    <input class="form-control" type="number" min="0" max="59" id="hours" asp-for="Hours" value="">
                </div>
                <div class="col-sm">
                    <small><label for="minutes">Minutes</label></small>
                    <input class="form-control" type="number" min="0" max="59" id="minutes" asp-for="Minutes" value="">
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Label">Label:</label>
                <input class="form-control" type="text" id="label" asp-for="Label" value="">
            </div>
            <div class="form-group">
                <label asp-for="Tags">Tags:</label>
                <input class="form-control" typeof="text" id="tags" name="Tags">
                <small>Add tags seperated by a comma</small>
            </div>
            <div style="width: 100%">
                <button class="btn btn-dark" style="margin-left: 70%; margin-right: 0; width: 30%" type="submit">Create Website Record</button>
            </div>
        </form>
    </div>
</div>


<div class="list">

    <h3>Here is the list of current Website Records.</h3>
    @if (ViewBag.WRList.Count != 0) {
        <table class="table table-striped">
            <tr>
                <td>Url</td>
                <td>Regex</td>
                <td>Periodicity</td>
                <td>Label</td>
                <td>Time of last executions</td>
                <td>Status of last executions</td>
                <td>Tags</td>
                <td>Crawl now</td>
            </tr>
            @{ int i = 0; }
            @foreach (WebsiteRecord record in ViewBag.WRList) {
                <tr>
                    <td>@record.Url</td>
                    <td>@record.Regex</td>
                    <td>@record.Days.ToString()d @record.Hours.ToString()h @record.Minutes.ToString()m</td>
                    <td></td>
                    <td></td>
                    <td>@record.Label</td>
                    <td>
                        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#Tags@(i)" aria-expanded="false" aria-controls="Tags@(i)">Show Tags</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" type="button">Crawl - placeholder</button>
                    </td>
                </tr>
                <tr class="collapse" id="Tags@(i)">
                    <td colspan="8"> Tags:
                        @for (int j = 0; j < record.TagsArray.Length; j++) {
                            @(record.TagsArray[j])
                            @if (j + 1 != record.TagsArray.Length) {
                                @(", ")
                            }
                        }
                    </td>
                </tr>
                i++;
            }
        </table>
    }
    else {
        <h4>No Website Records added yet.</h4>
        <hr/>
    }
</div>

<script>
    const metaDataUri = './Home/GetMetaData';
    const fullDataUri = './Home/GetFullData';
    let currentRecordIndex = 0;
    let metaData;
    let currentRecordFullData;

    setInterval(() => {
        getMetaData().then(data => metaData = data);
        getFullData().then(data => currentRecordFullData = data));
    }, 1000);
    
    function getMetaData() {
        return fetch(metaDataUri)
            .then(response => response.json())
            .then(data => data)
            .catch(error => console.error('Unable to get items.', error));
    }

    function getFullData() {
        return fetch(fullDataUri + "/" + currentRecordIndex)
            .then(response => response.json())
            .then(data => data)
            .catch(error => console.error('Unable to get items.', error));
    }
</script>

@* <node-plot></node-plot> *@
<test-graph></test-graph>
